org: vladkvlchk
app: shortlinker
service: shortlinker
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - Fn::GetAtt: [LinksTable, Arn]
            - Fn::GetAtt: [AppValuesTable, Arn]
        - Effect: Allow
          Action:
            - ses:SendEmail
            - sqs:SendMessage
            - sqs:SendMessageBatch
          Resource: "*"

functions:
  sign-up:
    handler: build/functions/http/auth/sign-up.handler
    events:
      - http:
          path: auth/sign-up
          method: post
  sign-in:
    handler: build/functions/http/auth/sign-in.handler
    events:
      - http:
          path: auth/sign-in
          method: post
  create-link:
    handler: build/functions/http/link/create-link.handler
    events:
      - http:
          path: link/create
          method: post
  deactivate-link:
    handler: build/functions/http/link/deactivate-link.handler
    events:
      - http:
          path: link/deactivate
          method: post
  links-by-user:
    handler: build/functions/http/link/links-by-user.handler
    events:
      - http:
          path: my-links
          method: get
  redirect:
    handler: build/functions/http/redirect.handler
    events:
      - http:
          path: /{id}
          method: get
  deleting-expired-links:
    handler: build/functions/deleting-expired-links.handler
    events:
      - schedule: rate(1 day)
  send-emails:
    handler: build/functions/send-emails.handler
    events:
      - sqs: 
          arn: 
            Fn::GetAtt: [NotificationsQueue, Arn]
          batchSize: 10

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    LinksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Links
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    AppValuesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AppValues
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    NotificationsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: notifications
        ReceiveMessageWaitTimeSeconds: 20
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60


plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild


custom:
  esbuild:
    # config: './esbuild.config.js'
    entryPoints:
      - './src/**/*.ts'
    # outputBuildFolder: './'
    bundle: true
    minify: true
    platform: "node"
    sourcemap: true
    target: "node18"

